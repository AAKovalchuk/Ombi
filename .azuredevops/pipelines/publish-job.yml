
variables:
  - template: templates/variables.yml

stages:
- stage: build
  jobs:
  - job: Build
    pool:
      vmImage: ${{ variables.vmImage }}
    steps:
    - template: templates/build-steps.yml

- stage: publish
  jobs:
  - template: templates/publish-os-steps.yml  
    parameters:
      name: 'Win10x64'
      Runtime: win10-x64
      OutputName: win-64
  
  - template: templates/publish-os-steps.yml  
    parameters:
      name: 'Win10x86'
      Runtime: win10-x86
      OutputName: win-86
  
  - template: templates/publish-os-steps.yml  
    parameters:
      name: 'OSXx64'
      Runtime: osx-x64
      OutputName: osx-64
  
  - template: templates/publish-os-steps.yml 
    parameters:
      name: 'Linuxx64'
      Runtime: linux-x64
      OutputName: linux-64
  
  - template: templates/publish-os-steps.yml  
    parameters:
      name: 'LinuxARM'
      Runtime: linux-arm
      OutputName: linux-arm
  
  - template: templates/publish-os-steps.yml  
    parameters:
      name: 'LinuxARMx64'
      Runtime: linux-arm64
      OutputName: linux-arm64


# - task: GitHubRelease@1
#   inputs:
#     gitHubConnection: 'github.com_tidusjar'
#     repositoryName: 'tidusjar/Ombi.Releases'
#     action: 'create'
#     target: 'c7fcbb77b58aef1076d635a9ef99e4374abc8672'
#     tagSource: 'userSpecifiedTag'
#     tag: '$(gitTag)'
#     releaseNotesSource: 'inline'
#     releaseNotesInline: '$(ReleaseNotes)'
#     assets: |
#       $(Build.ArtifactStagingDirectory)/*.zip
#       $(Build.ArtifactStagingDirectory)/*.gz
#     isPreRelease: true
#     changeLogCompareToRelease: 'lastNonDraftRelease'
#     changeLogType: 'commitBased'
#   condition: and(succeeded(), eq(variables['PublishToGithub'], 'true'))